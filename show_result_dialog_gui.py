#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.13
# In conjunction with Tcl version 8.6
#    May 05, 2018 01:45:45 PM

import os


try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

import result_dialog_gui_support

color_file_num = 0
step_file_num = 0
shading_file_num = 0
result_csv = None

def vp_start_gui_result_dialog(color_count, step_count, shading_count, result_file_path):
    """Starting point when module is the main routine."""
    global w, root, color_file_num, step_file_num, shading_file_num, result_csv
    root = Tk()

    color_file_num = color_count
    step_file_num = step_count
    shading_file_num = shading_count
    result_csv = result_file_path

    top = Data_Process_Result(root)
    result_dialog_gui_support.init(root, top)
    root.mainloop()


w = None


def create_Data_Process_Result(root, *args, **kwargs):
    """Starting point when module is imported by another program."""
    global w, rt
    rt = root
    w = Toplevel(root)
    top = Data_Process_Result(w)
    result_dialog_gui_support.init(w, top, *args, **kwargs)
    return w, top


def destroy_Data_Process_Result():
    global w
    w.destroy()
    w = None


class Data_Process_Result:
    def __init__(self, top=None):
        """This class configures and populates the toplevel window.
           top is the toplevel containing window."""
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#d9d9d9'  # X11 color: 'gray85'

        top.geometry("480x400+532+183")
        top.title("Data Process Result")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        # self.Button13_proc_data = Button(top)
        # add for handling button pressed event
        self.Button13_proc_data = Button(top, command=self.open_result_csv_button_pressed)
        self.Button13_proc_data.place(relx=0.13, rely=0.7, height=50, width=340)
        self.Button13_proc_data.configure(activebackground="#d9d9d9")
        self.Button13_proc_data.configure(activeforeground="#000000")
        self.Button13_proc_data.configure(background="#d9d9d9")
        self.Button13_proc_data.configure(disabledforeground="#a3a3a3")
        self.Button13_proc_data.configure(foreground="#000000")
        self.Button13_proc_data.configure(highlightbackground="#d9d9d9")
        self.Button13_proc_data.configure(highlightcolor="black")
        self.Button13_proc_data.configure(pady="0")
        # self.Button13_proc_data.configure(text='''Open result CSV file''')
        self.Button13_proc_data.configure(text="打开CSV结果文件".encode('utf8').decode('utf8'))


        self.Text1 = Text(top)
        self.Text1.place(relx=0.13, rely=0.08, relheight=0.13, relwidth=0.71)
        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(foreground="black")
        self.Text1.configure(highlightbackground="#d9d9d9")
        self.Text1.configure(highlightcolor="black")
        self.Text1.configure(insertbackground="black")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(selectforeground="black")
        self.Text1.configure(width=340)
        self.Text1.configure(wrap=WORD)

        # add for prompt
        global color_file_num
        self.Text1.configure(state='normal')
        self.Text1.delete(1.0, END)
        self.Text1.insert(1.0, "共处理了%d个色彩测试文件" % color_file_num)
        self.Text1.configure(state='disabled')

        self.Text2 = Text(top)
        self.Text2.place(relx=0.13, rely=0.25, relheight=0.13, relwidth=0.71)
        self.Text2.configure(background="white")
        self.Text2.configure(font="TkTextFont")
        self.Text2.configure(foreground="black")
        self.Text2.configure(highlightbackground="#d9d9d9")
        self.Text2.configure(highlightcolor="black")
        self.Text2.configure(insertbackground="black")
        self.Text2.configure(selectbackground="#c4c4c4")
        self.Text2.configure(selectforeground="black")
        self.Text2.configure(width=340)
        self.Text2.configure(wrap=WORD)

        # add for prompt
        global step_file_num
        self.Text2.configure(state='normal')
        self.Text2.delete(1.0, END)
        self.Text2.insert(1.0, "共处理了%d个灰阶测试文件" % step_file_num)
        self.Text2.configure(state='disabled')

        self.Text3 = Text(top)
        self.Text3.place(relx=0.13, rely=0.43, relheight=0.13, relwidth=0.71)
        self.Text3.configure(background="white")
        self.Text3.configure(font="TkTextFont")
        self.Text3.configure(foreground="black")
        self.Text3.configure(highlightbackground="#d9d9d9")
        self.Text3.configure(highlightcolor="black")
        self.Text3.configure(insertbackground="black")
        self.Text3.configure(selectbackground="#c4c4c4")
        self.Text3.configure(selectforeground="black")
        self.Text3.configure(width=340)
        self.Text3.configure(wrap=WORD)

        # add for prompt
        global shading_file_num
        self.Text3.configure(state='normal')
        self.Text3.delete(1.0, END)
        self.Text3.insert(1.0, "共处理了%d个均匀度测试文件" % shading_file_num)
        self.Text3.configure(state='disabled')

    def open_result_csv_button_pressed(self):
        global result_csv
        print("open result csv :  " + result_csv)

        """
        filename = filedialog.askopenfilename(initialdir=result_csv, filetypes=[('csv files', '.csv')])
        last_work_dir = os.path.dirname(filename)
        print("The path of selected file is  " + last_work_dir)
        """

        os.startfile(result_csv)

        return


if __name__ == '__main__':
    print("get cwd = " + os.getcwd())
    print("sep = " + os.path.sep)
    vp_start_gui_result_dialog(1, 1, 1, os.path.join(os.getcwd(), "result.csv"))
